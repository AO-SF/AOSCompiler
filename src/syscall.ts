export enum Syscall {
	Exit=0,
	GetPid=1,
	Argc=2,
	ArgvN=3,
	Fork=4,
	Exec=5,
	WaitPid=6,
	GetPidPath=7,
	GetPidState=8,
	GetAllCpuCounts=9,
	Kill=10,
	GetPidRam=11,
	Signal=12,
	GetPidFdN=13,
	Exec2=14,
	Read=256,
	Write=257,
	Open=258,
	Close=259,
	DirGetChildN=260,
	GetPath=261,
	ResizeFile=262,
	GetFileLen=263,
	TryReadByte=264,
	IsDir=265,
	FileExists=266,
	Delete=267,
	Read32=268,
	Write32=269,
	ResizeFile32=270,
	GetFileLen32=271,
	Append=272,
	Flush=273,
	TryWriteByte=274,
	GetPathGlobal=275,
	EnvGetPwd=514,
	EnvSetPwd=515,
	EnvGetPath=516,
	EnvSetPath=517,
	TimeMonotonic16s=768,
	TimeMonotonic16ms=769,
	TimeMonotonic32s=770,
	TimeMonotonic32ms=771,
	TimeReal32s=772,
	TimeToDate32s=773,
	RegisterSignalHandler=1024,
	Shutdown=1280,
	Mount=1281,
	Unmount=1282,
	Ioctl=1283,
	GetLogLevel=1284,
	SetLogLevel=1285,
	PipeOpen=1286,
	StrChr=1536,
	StrChrNul=1537,
	MemMove=1538,
	MemCmp=1539,
	StrRChr=1540,
	StrCmp=1541,
	HwDeviceRegister=1792,
	HwDeviceDeregister=1793,
	HwDeviceGetType=1794,
	HwDeviceSdCardReaderMount=1795,
	HwDeviceSdCardReaderUnmount=1796,
	HwDeviceDht22GetTemperature=1797,
	HwDeviceDht22GetHumidity=1798,
	Int32Add16=2048,
	Int32Add32=2049,
	Int32Sub16=2050,
	Int32Sub32=2051,
	Int32Mul16=2052,
	Int32Mul32=2053,
	Int32Div16=2054,
	Int32Div32=2055,
	Int32Shl=2056,
	Int32Shr=2057,
}

export function syscallInit():string {
	let output='';

	for (let syscall in Syscall)
		if (isNaN(Number(syscall)))
			output+='const '+syscallToAsmSymbol(Number(Syscall[syscall]))+' '+Number(Syscall[syscall])+'\n';

	return output;
}

export function syscallToAsmSymbol(syscall: Syscall):string {
	return 'SyscallId'+Syscall[syscall];
}
